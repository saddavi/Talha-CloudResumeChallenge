name: Deploy Jekyll Blog to GitHub Pages

on:
  push:
    branches: [ main, master ]
    paths:
      - '_posts/**'
      - '_config.yml'
      - 'index.md'
      - '_layouts/**'
      - '_includes/**'
      - 'assets/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - '_posts/**'
      - '_config.yml'
      - 'index.md'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Build Jekyll site
        run: |
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Optional: Cross-post to other platforms
  cross-post:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cross-post to Dev.to
        env:
          DEV_TO_API_KEY: ${{ secrets.DEV_TO_API_KEY }}
        run: |
          # Add cross-posting script here
          echo "Cross-posting to Dev.to (implement as needed)"

      - name: Cross-post to Hashnode
        env:
          HASHNODE_API_KEY: ${{ secrets.HASHNODE_API_KEY }}
        run: |
          # Add Hashnode cross-posting script here
          echo "Cross-posting to Hashnode (implement as needed)"
